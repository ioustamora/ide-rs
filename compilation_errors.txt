    Checking ide-rs v0.1.0 (C:\Users\yosta\dev\ide-rs)
error[E0432]: unresolved imports `magnetism::MagnetismZone`, `magnetism::MagnetismType`
  --> src\editor\smart_editing_modules\mod.rs:16:39
   |
16 | pub use magnetism::{MagnetismManager, MagnetismZone, MagnetismType};
   |                                       ^^^^^^^^^^^^^  ^^^^^^^^^^^^^ no `MagnetismType` in `editor::smart_editing_modules::magnetism`
   |                                       |
   |                                       no `MagnetismZone` in `editor::smart_editing_modules::magnetism`
   |
   = help: consider importing this variant instead:
           crate::editor::smart_editing_modules::learning_system::GuideType::MagnetismZone
help: a similar name exists in the module
   |
16 - pub use magnetism::{MagnetismManager, MagnetismZone, MagnetismType};
16 + pub use magnetism::{MagnetismManager, MagnetZone, MagnetismType};
   |
help: a similar name exists in the module
   |
16 - pub use magnetism::{MagnetismManager, MagnetismZone, MagnetismType};
16 + pub use magnetism::{MagnetismManager, MagnetismZone, MagnetType};
   |

error[E0432]: unresolved imports `learning_system::LearningSystem`, `learning_system::PatternRecognition`, `learning_system::UserBehaviorTracker`
  --> src\editor\smart_editing_modules\mod.rs:18:27
   |
18 | pub use learning_system::{LearningSystem, PatternRecognition, UserBehaviorTracker};
   |                           ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^ no `UserBehaviorTracker` in `editor::smart_editing_modules::learning_system`
   |                           |               |
   |                           |               no `PatternRecognition` in `editor::smart_editing_modules::learning_system`
   |                           no `LearningSystem` in `editor::smart_editing_modules::learning_system`

error[E0432]: unresolved imports `design_tokens::TokenCategory`, `design_tokens::DesignToken`
  --> src\editor\modern_ide_integration_modules\mod.rs:17:44
   |
17 | pub use design_tokens::{DesignTokenSystem, TokenCategory, DesignToken};
   |                                            ^^^^^^^^^^^^^  ^^^^^^^^^^^ no `DesignToken` in `editor::modern_ide_integration_modules::design_tokens`
   |                                            |
   |                                            no `TokenCategory` in `editor::modern_ide_integration_modules::design_tokens`

error[E0432]: unresolved import `component_library::LibraryCategory`
  --> src\editor\modern_ide_integration_modules\mod.rs:18:66
   |
18 | pub use component_library::{ComponentLibrary, ComponentTemplate, LibraryCategory};
   |                                                                  ^^^^^^^^^^^^^^^ no `LibraryCategory` in `editor::modern_ide_integration_modules::component_library`

error[E0432]: unresolved imports `framework_export::FrameworkExporter`, `framework_export::ExportOptions`
  --> src\editor\modern_ide_integration_modules\mod.rs:19:28
   |
19 | pub use framework_export::{FrameworkExporter, ExportTarget, ExportOptions};
   |                            ^^^^^^^^^^^^^^^^^                ^^^^^^^^^^^^^ no `ExportOptions` in `editor::modern_ide_integration_modules::framework_export`
   |                            |
   |                            no `FrameworkExporter` in `editor::modern_ide_integration_modules::framework_export`
   |                            help: a similar name exists in the module: `FrameworkExportManager`

error[E0432]: unresolved import `theme_system::ThemeVariant`
  --> src\editor\modern_ide_integration_modules\mod.rs:20:44
   |
20 | pub use theme_system::{ThemeSystem, Theme, ThemeVariant};
   |                                            ^^^^^^^^^^^^ no `ThemeVariant` in `editor::modern_ide_integration_modules::theme_system`

error[E0432]: unresolved import `code_generation::ExportFormat`
  --> src\editor\modern_ide_integration_modules\mod.rs:21:53
   |
21 | pub use code_generation::{CodeGenerator, CodeStyle, ExportFormat};
   |                                                     ^^^^^^^^^^^^ no `ExportFormat` in `editor::modern_ide_integration_modules::code_generation`
   |
   = help: consider importing this enum instead:
           crate::project_manager::serialization::ExportFormat

error[E0412]: cannot find type `FrameworkExportManager` in this scope
  --> src\editor\modern_ide_integration.rs:21:27
   |
21 |     pub framework_export: FrameworkExportManager,
   |                           ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this struct
   |
7  + use crate::editor::modern_ide_integration_modules::framework_export::FrameworkExportManager;
   |

warning: unused imports: `Deserialize` and `Serialize`
 --> src\rcl\ui\basic\form.rs:8:13
  |
8 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::rcl::ui::basic::*`
   --> src\ide_app\app_state.rs:238:13
    |
238 |         use crate::rcl::ui::basic::*;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\floating_panel.rs:52:1
    |
52  | impl Component for FloatingPanel {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\layout_manager.rs:52:1
    |
52  | impl Component for LayoutManager {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\rich_text_editor.rs:60:1
    |
60  | impl Component for RichTextEditor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\code_editor.rs:12:1
    |
12  | impl Component for CodeEditor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\progress_bar.rs:12:1
    |
12  | impl Component for ProgressBar {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\tabs.rs:12:1
    |
12  | impl Component for Tabs {
    | ^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\table.rs:12:1
    |
12  | impl Component for Table {
    | ^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\tree.rs:17:1
    |
17  | impl Component for Tree {
    | ^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\modal.rs:13:1
    |
13  | impl Component for Modal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\notification.rs:48:1
    |
48  | impl Component for Notification {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\calendar.rs:11:1
    |
11  | impl Component for Calendar {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\color_picker.rs:11:1
    |
11  | impl Component for ColorPicker {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\file_picker.rs:11:1
    |
11  | impl Component for FilePicker {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0046]: not all trait items implemented, missing: `get_property`, `set_property`, `get_property_names`
   --> src\rcl\ui\advanced\image.rs:12:1
    |
12  | impl Component for Image {
    | ^^^^^^^^^^^^^^^^^^^^^^^^ missing `get_property`, `set_property`, `get_property_names` in implementation
    |
   ::: src\rcl\ui\component.rs:149:5
    |
149 |     fn get_property(&self, name: &str) -> Option<String>;
    |     ----------------------------------------------------- `get_property` from trait
...
164 |     fn set_property(&mut self, name: &str, value: &str) -> bool;
    |     ------------------------------------------------------------ `set_property` from trait
...
174 |     fn get_property_names(&self) -> Vec<String>;
    |     -------------------------------------------- `get_property_names` from trait

error[E0599]: `alignment_guides::GuideDirection` is not an iterator
   --> src\editor\smart_editing_modules\alignment_guides.rs:232:31
    |
28  | pub enum GuideDirection {
    | ----------------------- method `cmp` not found for this enum because it doesn't satisfy `alignment_guides::GuideDirection: Iterator`
...
232 |             match a.direction.cmp(&b.direction) {
    |                               ^^^ `alignment_guides::GuideDirection` is not an iterator
    |
    = note: the following trait bounds were not satisfied:
            `alignment_guides::GuideDirection: Iterator`
            which is required by `&mut alignment_guides::GuideDirection: Iterator`
note: the trait `Iterator` must be implemented
   --> C:\Users\yosta\.rustup\toolchains\stable-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\core\src\iter\traits\iterator.rs:39:1
    |
39  | pub trait Iterator {
    | ^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `cmp`, perhaps you need to implement one of them:
            candidate #1: `Iterator`
            candidate #2: `Ord`

error[E0689]: can't call method `min` on ambiguous numeric type `{float}`
   --> src\editor\smart_editing_modules\alignment_guides.rs:381:46
    |
381 |             let segment_length = dash_length.min(remaining);
    |                                              ^^^
    |
help: you must specify a type for this binding, like `f32`
    |
372 |         let dash_length: f32 = 8.0;
    |                        +++++

error[E0277]: the trait bound `egui::Vec2: Serialize` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:46:24
     |
46   | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Vec2`
...
50   |     /// Canvas size
     |     --------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 316 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:51:22
     |
51   |     pub canvas_size: Vec2,
     |                      ^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 330 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:51:22
     |
51   |     pub canvas_size: Vec2,
     |                      ^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 330 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
  --> src\editor\smart_editing_modules\learning_system.rs:46:35
   |
46 | #[derive(Clone, Debug, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a [u8]
             &'a std::path::Path
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 330 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
  --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `GuideType: std::cmp::Eq` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:76:32
     |
76   |     pub preferred_guide_types: HashMap<GuideType, f32>,
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`
help: consider annotating `GuideType` with `#[derive(Eq)]`
     |
25   + #[derive(Eq)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: Hash` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:76:32
     |
76   |     pub preferred_guide_types: HashMap<GuideType, f32>,
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`
help: consider annotating `GuideType` with `#[derive(Hash)]`
     |
25   + #[derive(Hash)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: std::cmp::Eq` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:80:31
     |
80   |     pub preferred_tolerances: HashMap<GuideType, f32>,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`
help: consider annotating `GuideType` with `#[derive(Eq)]`
     |
25   + #[derive(Eq)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: Hash` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:80:31
     |
80   |     pub preferred_tolerances: HashMap<GuideType, f32>,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`
help: consider annotating `GuideType` with `#[derive(Hash)]`
     |
25   + #[derive(Hash)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: std::cmp::Eq` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:76:32
     |
76   |     pub preferred_guide_types: HashMap<GuideType, f32>,
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`
help: consider annotating `GuideType` with `#[derive(Eq)]`
     |
25   + #[derive(Eq)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: Hash` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:76:32
     |
76   |     pub preferred_guide_types: HashMap<GuideType, f32>,
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`
help: consider annotating `GuideType` with `#[derive(Hash)]`
     |
25   + #[derive(Hash)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: std::cmp::Eq` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:80:31
     |
80   |     pub preferred_tolerances: HashMap<GuideType, f32>,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`
help: consider annotating `GuideType` with `#[derive(Eq)]`
     |
25   + #[derive(Eq)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: Hash` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:80:31
     |
80   |     pub preferred_tolerances: HashMap<GuideType, f32>,
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `GuideType`
     |
     = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
     = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`
help: consider annotating `GuideType` with `#[derive(Hash)]`
     |
25   + #[derive(Hash)]
26   | pub enum GuideType {
     |

error[E0277]: the trait bound `GuideType: std::cmp::Eq` is not satisfied
  --> src\editor\smart_editing_modules\learning_system.rs:73:35
   |
73 | #[derive(Clone, Debug, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `GuideType`
   |
   = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
   = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
  --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `GuideType` with `#[derive(Eq)]`
   |
25 + #[derive(Eq)]
26 | pub enum GuideType {
   |

error[E0277]: the trait bound `GuideType: Hash` is not satisfied
  --> src\editor\smart_editing_modules\learning_system.rs:73:35
   |
73 | #[derive(Clone, Debug, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `Hash` is not implemented for `GuideType`
   |
   = help: the trait `Deserialize<'_>` is implemented for `HashMap<K, V, S>`
   = note: required for `HashMap<GuideType, f32>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
  --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `GuideType` with `#[derive(Hash)]`
   |
25 + #[derive(Hash)]
26 | pub enum GuideType {
   |

error[E0599]: the method `entry` exists for struct `HashMap<GuideType, (f32, f32)>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:254:37
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
254 |             let entry = type_scores.entry(activation.guide_type.clone()).or_default();
    |                                     ^^^^^ method cannot be called on `HashMap<GuideType, (f32, f32)>` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            `GuideType: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0599]: the method `get` exists for struct `HashMap<GuideType, f32>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:268:71
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
268 |             let current_pref = self.preferences.preferred_guide_types.get(&guide_type).copied().unwrap_or(0.5);
    |                                                                       ^^^ method cannot be called on `HashMap<GuideType, f32>` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            `GuideType: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0599]: the method `insert` exists for struct `HashMap<GuideType, f32>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:271:52
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
271 |             self.preferences.preferred_guide_types.insert(guide_type, new_pref);
    |                                                    ^^^^^^
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            `GuideType: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0599]: the method `insert` exists for struct `HashMap<GuideType, f32>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:342:51
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
342 |             self.preferences.preferred_tolerances.insert(guide_type, new_tolerance);
    |                                                   ^^^^^^
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            `GuideType: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0599]: the method `entry` exists for struct `HashMap<GuideType, f32>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:377:34
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
377 |                 *type_acceptance.entry(activation.guide_type.clone()).or_default() += score;
    |                                  ^^^^^ method cannot be called on `HashMap<GuideType, f32>` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            `GuideType: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0277]: the trait bound `GuideType: Ord` is not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:387:29
    |
387 |             preferred_types.sort();
    |                             ^^^^ the trait `Ord` is not implemented for `GuideType`
    |
note: required by a bound in `std::slice::<impl [T]>::sort`
   --> C:\Users\yosta\.rustup\toolchains\stable-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\alloc\src\slice.rs:135:12
    |
133 |     pub fn sort(&mut self)
    |            ---- required by a bound in this associated function
134 |     where
135 |         T: Ord,
    |            ^^^ required by this bound in `std::slice::<impl [T]>::sort`
help: consider annotating `GuideType` with `#[derive(Ord)]`
    |
25  + #[derive(Ord)]
26  | pub enum GuideType {
    |

error[E0599]: the method `entry` exists for struct `HashMap<Vec<GuideType>, f32>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:456:30
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
456 |             *sequence_counts.entry(sequence).or_default() += 1.0;
    |                              ^^^^^ method cannot be called on `HashMap<Vec<GuideType>, f32>` due to unsatisfied trait bounds
    |
   ::: C:\Users\yosta\.rustup\toolchains\stable-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\alloc\src\vec\mod.rs:409:1
    |
409 | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
    | ------------------------------------------------------------------------------------------------ doesn't satisfy `std::vec::Vec<GuideType>: Hash` or `std::vec::Vec<GuideType>: std::cmp::Eq`
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            which is required by `std::vec::Vec<GuideType>: std::cmp::Eq`
            `GuideType: Hash`
            which is required by `std::vec::Vec<GuideType>: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0599]: no method named `hour` found for struct `DateTime` in the current scope
   --> src\editor\smart_editing_modules\learning_system.rs:492:45
    |
492 |             let hour = activation.timestamp.hour();
    |                                             ^^^^
    |
   ::: C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\chrono-0.4.41\src\traits.rs:285:8
    |
285 |     fn hour(&self) -> u32;
    |        ---- the method is available for `DateTime<Utc>` here
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `Timelike` which provides `hour` is implemented but not in scope; perhaps you want to import it
    |
6   + use chrono::Timelike;
    |
help: there is a method `hour12` with a similar name
    |
492 |             let hour = activation.timestamp.hour12();
    |                                                 ++

error[E0599]: no method named `hour` found for struct `DateTime` in the current scope
   --> src\editor\smart_editing_modules\learning_system.rs:509:41
    |
509 |                 .filter(|a| a.timestamp.hour() == hour)
    |                                         ^^^^
    |
   ::: C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\chrono-0.4.41\src\traits.rs:285:8
    |
285 |     fn hour(&self) -> u32;
    |        ---- the method is available for `DateTime<Utc>` here
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `Timelike` which provides `hour` is implemented but not in scope; perhaps you want to import it
    |
6   + use chrono::Timelike;
    |
help: there is a method `hour12` with a similar name
    |
509 |                 .filter(|a| a.timestamp.hour12() == hour)
    |                                             ++

error[E0599]: the method `get` exists for struct `HashMap<GuideType, f32>`, but its trait bounds were not satisfied
   --> src\editor\smart_editing_modules\learning_system.rs:583:70
    |
25  | pub enum GuideType {
    | ------------------ doesn't satisfy `GuideType: Hash` or `GuideType: std::cmp::Eq`
...
583 |         let base_preference = self.preferences.preferred_guide_types.get(guide_type).copied().unwrap_or(0.5);
    |                                                                      ^^^ method cannot be called on `HashMap<GuideType, f32>` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `GuideType: std::cmp::Eq`
            `GuideType: Hash`
help: consider annotating `GuideType` with `#[derive(Eq, Hash, PartialEq)]`
    |
25  + #[derive(Eq, Hash, PartialEq)]
26  | pub enum GuideType {
    |

error[E0277]: the trait bound `BehaviorPatterns: Serialize` is not satisfied
    --> src\editor\smart_editing_modules\learning_system.rs:631:18
     |
631  |         #[derive(Serialize)]
     |                  ^^^^^^^^^ the trait `Serialize` is not implemented for `BehaviorPatterns`
...
635  |             patterns: &'a BehaviorPatterns,
     |             -------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `BehaviorPatterns` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 316 others
     = note: required for `&BehaviorPatterns` to implement `Serialize`
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Pos2: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\component_library.rs:99:24
     |
99   | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Pos2`
...
105  |     /// Component position
     |     ---------------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Pos2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
     = note: required for `std::option::Option<egui::Pos2>` to implement `Serialize`
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Vec2: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\component_library.rs:99:24
     |
99   | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Vec2`
...
107  |     /// Component size
     |     ------------------ required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
     = note: required for `std::option::Option<egui::Vec2>` to implement `Serialize`
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Pos2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\component_library.rs:106:19
     |
106  |     pub position: Option<Pos2>,
     |                   ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Pos2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Pos2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 332 others
     = note: required for `std::option::Option<egui::Pos2>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\component_library.rs:108:15
     |
108  |     pub size: Option<Vec2>,
     |               ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 332 others
     = note: required for `std::option::Option<egui::Vec2>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Pos2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\component_library.rs:106:19
     |
106  |     pub position: Option<Pos2>,
     |                   ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Pos2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Pos2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 332 others
     = note: required for `std::option::Option<egui::Pos2>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\component_library.rs:108:15
     |
108  |     pub size: Option<Vec2>,
     |               ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 332 others
     = note: required for `std::option::Option<egui::Vec2>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Pos2: Deserialize<'_>` is not satisfied
  --> src\editor\modern_ide_integration_modules\component_library.rs:99:35
   |
99 | #[derive(Clone, Debug, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Pos2`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Pos2` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a [u8]
             &'a std::path::Path
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 332 others
   = note: required for `std::option::Option<egui::Pos2>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
  --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
  --> src\editor\modern_ide_integration_modules\component_library.rs:99:35
   |
99 | #[derive(Clone, Debug, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a [u8]
             &'a std::path::Path
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 332 others
   = note: required for `std::option::Option<egui::Vec2>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
  --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `next_location` found for mutable reference `&mut egui::Ui` in the current scope
   --> src\editor\modern_ide_integration_modules\component_library.rs:269:31
    |
269 |                         if ui.next_location().x == 0.0 {
    |                               ^^^^^^^^^^^^^ method not found in `&mut Ui`

error[E0277]: can't compare `NamingConvention` with `NamingConvention`
    --> src\editor\modern_ide_integration_modules\framework_export.rs:399:28
     |
399  |                         ui.selectable_value(&mut self.settings.naming_convention, NamingConvention::PascalCase, "PascalCase");
     |                            ^^^^^^^^^^^^^^^^ no implementation for `NamingConvention == NamingConvention`
     |
     = help: the trait `PartialEq` is not implemented for `NamingConvention`
note: required by a bound in `egui::Ui::selectable_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\egui-0.27.2\src\ui.rs:1541:36
     |
1541 |     pub fn selectable_value<Value: PartialEq>(
     |                                    ^^^^^^^^^ required by this bound in `Ui::selectable_value`
help: consider annotating `NamingConvention` with `#[derive(PartialEq)]`
     |
128  + #[derive(PartialEq)]
129  | pub enum NamingConvention {
     |

error[E0277]: can't compare `NamingConvention` with `NamingConvention`
    --> src\editor\modern_ide_integration_modules\framework_export.rs:400:28
     |
400  |                         ui.selectable_value(&mut self.settings.naming_convention, NamingConvention::CamelCase, "camelCase");
     |                            ^^^^^^^^^^^^^^^^ no implementation for `NamingConvention == NamingConvention`
     |
     = help: the trait `PartialEq` is not implemented for `NamingConvention`
note: required by a bound in `egui::Ui::selectable_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\egui-0.27.2\src\ui.rs:1541:36
     |
1541 |     pub fn selectable_value<Value: PartialEq>(
     |                                    ^^^^^^^^^ required by this bound in `Ui::selectable_value`
help: consider annotating `NamingConvention` with `#[derive(PartialEq)]`
     |
128  + #[derive(PartialEq)]
129  | pub enum NamingConvention {
     |

error[E0277]: can't compare `NamingConvention` with `NamingConvention`
    --> src\editor\modern_ide_integration_modules\framework_export.rs:401:28
     |
401  |                         ui.selectable_value(&mut self.settings.naming_convention, NamingConvention::KebabCase, "kebab-case");
     |                            ^^^^^^^^^^^^^^^^ no implementation for `NamingConvention == NamingConvention`
     |
     = help: the trait `PartialEq` is not implemented for `NamingConvention`
note: required by a bound in `egui::Ui::selectable_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\egui-0.27.2\src\ui.rs:1541:36
     |
1541 |     pub fn selectable_value<Value: PartialEq>(
     |                                    ^^^^^^^^^ required by this bound in `Ui::selectable_value`
help: consider annotating `NamingConvention` with `#[derive(PartialEq)]`
     |
128  + #[derive(PartialEq)]
129  | pub enum NamingConvention {
     |

error[E0277]: can't compare `NamingConvention` with `NamingConvention`
    --> src\editor\modern_ide_integration_modules\framework_export.rs:402:28
     |
402  |                         ui.selectable_value(&mut self.settings.naming_convention, NamingConvention::SnakeCase, "snake_case");
     |                            ^^^^^^^^^^^^^^^^ no implementation for `NamingConvention == NamingConvention`
     |
     = help: the trait `PartialEq` is not implemented for `NamingConvention`
note: required by a bound in `egui::Ui::selectable_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\egui-0.27.2\src\ui.rs:1541:36
     |
1541 |     pub fn selectable_value<Value: PartialEq>(
     |                                    ^^^^^^^^^ required by this bound in `Ui::selectable_value`
help: consider annotating `NamingConvention` with `#[derive(PartialEq)]`
     |
128  + #[derive(PartialEq)]
129  | pub enum NamingConvention {
     |

error[E0277]: the trait bound `egui::Pos2: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\framework_export.rs:465:24
     |
465  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Pos2`
...
471  |     /// Component position
     |     ---------------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Pos2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
     = note: required for `std::option::Option<egui::Pos2>` to implement `Serialize`
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Vec2: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\framework_export.rs:465:24
     |
465  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Vec2`
...
473  |     /// Component size
     |     ------------------ required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
     = note: required for `std::option::Option<egui::Vec2>` to implement `Serialize`
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Pos2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\framework_export.rs:472:19
     |
472  |     pub position: Option<Pos2>,
     |                   ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Pos2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Pos2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 333 others
     = note: required for `std::option::Option<egui::Pos2>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\framework_export.rs:474:15
     |
474  |     pub size: Option<Vec2>,
     |               ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 333 others
     = note: required for `std::option::Option<egui::Vec2>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Pos2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\framework_export.rs:472:19
     |
472  |     pub position: Option<Pos2>,
     |                   ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Pos2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Pos2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 333 others
     = note: required for `std::option::Option<egui::Pos2>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\framework_export.rs:474:15
     |
474  |     pub size: Option<Vec2>,
     |               ^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 333 others
     = note: required for `std::option::Option<egui::Vec2>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Pos2: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\framework_export.rs:465:35
    |
465 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Pos2`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Pos2` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 333 others
    = note: required for `std::option::Option<egui::Pos2>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Vec2: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\framework_export.rs:465:35
    |
465 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Vec2`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Vec2` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 333 others
    = note: required for `std::option::Option<egui::Vec2>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:47:24
     |
47   | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
48   | pub struct ThemeCustomization {
49   |     /// Custom color overrides
     |     -------------------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
     = note: required for `HashMap<std::string::String, egui::Color32>` to implement `Serialize`
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:50:26
     |
50   |     pub color_overrides: HashMap<String, Color32>,
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
     = note: required for `HashMap<std::string::String, egui::Color32>` to implement `Deserialize<'_>`
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:50:26
     |
50   |     pub color_overrides: HashMap<String, Color32>,
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
     = note: required for `HashMap<std::string::String, egui::Color32>` to implement `Deserialize<'_>`
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
  --> src\editor\modern_ide_integration_modules\theme_system.rs:47:35
   |
47 | #[derive(Clone, Debug, Serialize, Deserialize)]
   |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a [u8]
             &'a std::path::Path
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 340 others
   = note: required for `HashMap<std::string::String, egui::Color32>` to implement `Deserialize<'_>`
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
  --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:107:24
     |
107  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
108  | pub struct ColorScale {
109  |     pub c50: Color32,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:109:14
     |
109  |     pub c50: Color32,
     |              ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:110:15
     |
110  |     pub c100: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:111:15
     |
111  |     pub c200: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:112:15
     |
112  |     pub c300: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:113:15
     |
113  |     pub c400: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:114:15
     |
114  |     pub c500: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:115:15
     |
115  |     pub c600: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:116:15
     |
116  |     pub c700: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:117:15
     |
117  |     pub c800: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:118:15
     |
118  |     pub c900: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:109:14
     |
109  |     pub c50: Color32,
     |              ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:110:15
     |
110  |     pub c100: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:111:15
     |
111  |     pub c200: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:112:15
     |
112  |     pub c300: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:113:15
     |
113  |     pub c400: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:114:15
     |
114  |     pub c500: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:115:15
     |
115  |     pub c600: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:116:15
     |
116  |     pub c700: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:117:15
     |
117  |     pub c800: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:118:15
     |
118  |     pub c900: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\theme_system.rs:107:35
    |
107 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 340 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:122:24
     |
122  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
123  | pub struct SemanticColors {
124  |     /// Success color
     |     ----------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:125:18
     |
125  |     pub success: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:127:18
     |
127  |     pub warning: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:129:16
     |
129  |     pub error: Color32,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:131:15
     |
131  |     pub info: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:125:18
     |
125  |     pub success: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:127:18
     |
127  |     pub warning: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:129:16
     |
129  |     pub error: Color32,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:131:15
     |
131  |     pub info: Color32,
     |               ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\theme_system.rs:122:35
    |
122 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 340 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:135:24
     |
135  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
136  | pub struct BackgroundColors {
137  |     /// Primary background
     |     ---------------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:138:18
     |
138  |     pub primary: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:140:20
     |
140  |     pub secondary: Color32,
     |                    ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:142:19
     |
142  |     pub tertiary: Color32,
     |                   ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:144:18
     |
144  |     pub overlay: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:138:18
     |
138  |     pub primary: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:140:20
     |
140  |     pub secondary: Color32,
     |                    ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:142:19
     |
142  |     pub tertiary: Color32,
     |                   ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:144:18
     |
144  |     pub overlay: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\theme_system.rs:135:35
    |
135 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 340 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:148:24
     |
148  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
149  | pub struct TextColors {
150  |     /// Primary text
     |     ---------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:151:18
     |
151  |     pub primary: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:153:20
     |
153  |     pub secondary: Color32,
     |                    ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:155:19
     |
155  |     pub tertiary: Color32,
     |                   ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:157:19
     |
157  |     pub disabled: Color32,
     |                   ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:159:18
     |
159  |     pub inverse: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:151:18
     |
151  |     pub primary: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:153:20
     |
153  |     pub secondary: Color32,
     |                    ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:155:19
     |
155  |     pub tertiary: Color32,
     |                   ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:157:19
     |
157  |     pub disabled: Color32,
     |                   ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:159:18
     |
159  |     pub inverse: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\theme_system.rs:148:35
    |
148 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 340 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:163:24
     |
163  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
164  | pub struct BorderColors {
165  |     /// Default border
     |     ------------------ required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:166:18
     |
166  |     pub default: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:168:17
     |
168  |     pub subtle: Color32,
     |                 ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:170:17
     |
170  |     pub strong: Color32,
     |                 ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:172:16
     |
172  |     pub focus: Color32,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:166:18
     |
166  |     pub default: Color32,
     |                  ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:168:17
     |
168  |     pub subtle: Color32,
     |                 ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:170:17
     |
170  |     pub strong: Color32,
     |                 ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:172:16
     |
172  |     pub focus: Color32,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\theme_system.rs:163:35
    |
163 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 340 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Serialize` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:224:24
     |
224  | #[derive(Clone, Debug, Serialize, Deserialize)]
     |                        ^^^^^^^^^ the trait `Serialize` is not implemented for `egui::Color32`
...
234  |     /// Shadow color
     |     ---------------- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 315 others
note: required by a bound in `inspector::_::_serde::ser::SerializeStruct::serialize_field`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\ser\mod.rs:1866:21
     |
1864 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1865 |     where
1866 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:235:16
     |
235  |     pub color: Color32,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_element`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
    --> src\editor\modern_ide_integration_modules\theme_system.rs:235:16
     |
235  |     pub color: Color32,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a [u8]
               &'a std::path::Path
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 340 others
note: required by a bound in `next_value`
    --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\de\mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `egui::Color32: Deserialize<'_>` is not satisfied
   --> src\editor\modern_ide_integration_modules\theme_system.rs:224:35
    |
224 | #[derive(Clone, Debug, Serialize, Deserialize)]
    |                                   ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `egui::Color32`
    |
    = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `egui::Color32` type
    = note: for types from other crates check whether the crate offers a `serde` feature flag
    = help: the following other types implement trait `Deserialize<'de>`:
              &'a [u8]
              &'a std::path::Path
              &'a str
              ()
              (T,)
              (T0, T1)
              (T0, T1, T2)
              (T0, T1, T2, T3)
            and 340 others
note: required by a bound in `inspector::_::_serde::__private::de::missing_field`
   --> C:\Users\yosta\.cargo\registry\src\index.crates.io-1949cf8c6b5b557f\serde-1.0.219\src\private\de.rs:25:8
    |
23  | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
    |        ------------- required by a bound in this function
24  | where
25  |     V: Deserialize<'de>,
    |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0615]: attempted to take value of method `text_color` on type `Visuals`
   --> src\editor\modern_ide_integration_modules\theme_system.rs:375:21
    |
375 |             visuals.text_color = theme.colors.text.primary;
    |                     ^^^^^^^^^^ method, not a field
    |
    = help: methods are immutable and cannot be assigned to

error[E0615]: attempted to take value of method `text_color` on type `Visuals`
   --> src\editor\modern_ide_integration_modules\theme_system.rs:382:45
    |
382 |                     "text_color" => visuals.text_color = *color,
    |                                             ^^^^^^^^^^ method, not a field
    |
    = help: methods are immutable and cannot be assigned to

error[E0507]: cannot move out of index of `std::vec::Vec<(f32, usize, AlignmentType)>`
   --> src\editor\smart_editing_modules\alignment_guides.rs:148:34
    |
148 |             let mut group = vec![y_positions[i]];
    |                                  ^^^^^^^^^^^^^^ move occurs because value has type `(f32, usize, AlignmentType)`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
148 |             let mut group = vec![y_positions[i].clone()];
    |                                                ++++++++

error[E0507]: cannot move out of index of `std::vec::Vec<(f32, usize, AlignmentType)>`
   --> src\editor\smart_editing_modules\alignment_guides.rs:154:28
    |
154 |                 group.push(y_positions[j]);
    |                            ^^^^^^^^^^^^^^ move occurs because value has type `(f32, usize, AlignmentType)`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
154 |                 group.push(y_positions[j].clone());
    |                                          ++++++++

error[E0507]: cannot move out of index of `std::vec::Vec<(f32, usize, AlignmentType)>`
   --> src\editor\smart_editing_modules\alignment_guides.rs:198:34
    |
198 |             let mut group = vec![x_positions[i]];
    |                                  ^^^^^^^^^^^^^^ move occurs because value has type `(f32, usize, AlignmentType)`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
198 |             let mut group = vec![x_positions[i].clone()];
    |                                                ++++++++

error[E0507]: cannot move out of index of `std::vec::Vec<(f32, usize, AlignmentType)>`
   --> src\editor\smart_editing_modules\alignment_guides.rs:204:28
    |
204 |                 group.push(x_positions[j]);
    |                            ^^^^^^^^^^^^^^ move occurs because value has type `(f32, usize, AlignmentType)`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
204 |                 group.push(x_positions[j].clone());
    |                                          ++++++++

warning: unused variable: `direction`
   --> src\editor\smart_editing_modules\alignment_guides.rs:393:13
    |
393 |         let direction = (end - start).normalized();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_direction`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `formatter`
   --> src\editor\modern_ide_integration_modules\code_generation.rs:602:21
    |
602 |         if let Some(formatter) = self.formatters.get(language) {
    |                     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_formatter`

Some errors have detailed explanations: E0046, E0277, E0412, E0432, E0507, E0599, E0615, E0689.
For more information about an error, try `rustc --explain E0046`.
warning: `ide-rs` (lib) generated 4 warnings
error: could not compile `ide-rs` (lib) due to 148 previous errors; 4 warnings emitted
